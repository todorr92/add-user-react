{"version":3,"sources":["Components/UI/ErrorModal.module.css","Components/UI/Card.module.css","Components/UI/Button.module.css","Components/Users/AddUser.module.css","Components/Users/UsersList.module.css","Components/Helpers/Wrapper.js","Components/UI/Card.js","Components/UI/Button.js","Components/UI/ErrorModal.js","Components/Users/AddUser.js","Components/Users/UsersList.js","App.js","index.js"],"names":["module","exports","Wrapper","props","children","Card","className","classes","card","Button","button","type","onClick","Backdrop","backdrop","onConfirm","ModalOverlay","modal","header","title","content","message","actions","ErrorModal","Fragment","ReactDOM","createPortal","document","getElementById","AddUser","nameInputRef","useRef","ageInputRef","useState","error","setError","input","onSubmit","event","preventDefault","enteredName","current","value","enteredUserAge","trim","length","onAddUser","htmlFor","id","ref","UsersList","users","map","user","name","age","App","usersList","setUsersList","uName","uAge","prevUsersList","Math","random","toString","render"],"mappings":"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","file":"static/js/main.48511daf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"ErrorModal_backdrop__3AB_q\",\"modal\":\"ErrorModal_modal__1MCYs\",\"header\":\"ErrorModal_header__MAFZr\",\"content\":\"ErrorModal_content__3MsCR\",\"actions\":\"ErrorModal_actions__30SzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2AvqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__S7pO5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"AddUser_input__206MP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"UsersList_users__3bVM3\"};","const Wrapper = (props) => {\r\n  return props.children;\r\n};\r\n\r\nexport default Wrapper;\r\n","import classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import classes from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      className={classes.button}\r\n      type={props.type || \"button\"}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Card from \"./Card\";\r\nimport Button from \"./Button\";\r\nimport classes from \"./ErrorModal.module.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\"; // can be any name I want, in React 18 import will have to be from react-dom/client\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onConfirm} />;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <Card className={classes.modal}>\r\n      <header className={classes.header}>\r\n        <h2>{props.title}</h2>\r\n      </header>\r\n      <div className={classes.content}>\r\n        <p>{props.message}</p>\r\n      </div>\r\n      <footer className={classes.actions}>\r\n        <Button onClick={props.onConfirm}>Okay</Button>\r\n      </footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {/* react portals  so the divs holding the modal and overlay appears side by sie with root div instead of being rendered inside root div*/}\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onConfirm={props.onConfirm} />,\r\n        document.getElementById(\"backdrop-root\")\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay\r\n          title={props.title}\r\n          message={props.message}\r\n          onConfirm={props.onConfirm}\r\n        />,\r\n        document.getElementById(\"overlay-root\")\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import { useState, useRef } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport Button from \"../UI/Button\";\r\nimport classes from \"./AddUser.module.css\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\nimport Wrapper from \"../Helpers/Wrapper\";\r\n\r\n// when using useRef, we have uncontrolled components, while with useState we have controlled components\r\n\r\nconst AddUser = (props) => {\r\n  const nameInputRef = useRef();\r\n  const ageInputRef = useRef();\r\n  // commenting out useStates as they are not needed anymore due to use of useRef\r\n  //   const [enteredUsername, setEnteredUsername] = useState(\"\");\r\n  //   const [enteredAge, setEnteredAge] = useState(\"\");\r\n  const [error, setError] = useState(); // initial value is undenfined so no need to pass anything inside parentheses\r\n\r\n  const addUserHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredUserAge = ageInputRef.current.value;\r\n    if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\r\n      setError({\r\n        title: \"Invalid input\",\r\n        message: \"Please enter a valid name and age (non-empty values).\",\r\n      });\r\n      return;\r\n    }\r\n    // enteredAge is a string, by adding + we are forcing it to convert to a number\r\n    if (+enteredUserAge < 1) {\r\n      setError({\r\n        title: \"Invalid age\",\r\n        message: \"Please enter a valid age (> 0).\",\r\n      });\r\n      return;\r\n    }\r\n    props.onAddUser(enteredName, enteredUserAge);\r\n    // reseting input values after submit, not the best way to do it as it is manipulating the DOM, alternative would be useState commented below\r\n    nameInputRef.current.value = \"\";\r\n    ageInputRef.current.value = \"\";\r\n\r\n    // commenting out useStates as they are not needed anymore due to use of useRef\r\n    // setEnteredUsername(\"\");\r\n    // setEnteredAge(\"\");\r\n  };\r\n\r\n  // commenting out useStates as they are not needed anymore due to use of useRef\r\n\r\n  //   const usernameChangeHandler = (event) => {\r\n  //     setEnteredUsername(event.target.value);\r\n  //   };\r\n\r\n  //   const ageChangeHandler = (event) => {\r\n  //     setEnteredAge(event.target.value);\r\n  //   };\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    //   due to React limitations, we need to wrap everything so one element is returned, usually that's empty <div>, depending on how many components are used\r\n    //   there can be to many divs rendered in DOM, to avoid this we can create an Wrapper component which returns only children which is basically content below\r\n    <Wrapper>\r\n      {/* this syntaxs works as if there is an error, display error modal, otherwise nothing */}\r\n      {error && (\r\n        <ErrorModal\r\n          title={error.title}\r\n          message={error.message}\r\n          onConfirm={errorHandler}\r\n        />\r\n      )}\r\n      {/* // this is props set in Card.js(props.className) it could be any different name */}\r\n      <Card className={classes.input}>\r\n        <form onSubmit={addUserHandler}>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            // commenting out useStates as they are not needed anymore due to use of useRef\r\n            // value={enteredUsername}\r\n            // onChange={usernameChangeHandler}\r\n            ref={nameInputRef}\r\n          />\r\n          <label htmlFor=\"age\">Age (Years)</label>\r\n          <input\r\n            id=\"age\"\r\n            type=\"number\"\r\n            // commenting out useStates as they are not needed anymore due to use of useRef\r\n            // value={enteredAge}\r\n            // onChange={ageChangeHandler}\r\n            ref={ageInputRef}\r\n          />\r\n          <Button type=\"submit\">Add User</Button>\r\n        </form>\r\n      </Card>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","import Card from \"../UI/Card\";\r\nimport classes from \"./UsersList.module.css\";\r\n\r\nconst UsersList = (props) => {\r\n  return (\r\n    <Card className={classes.users}>\r\n      <ul>\r\n        {props.users.map((user) => (\r\n          <li key={user.id}>\r\n            {user.name} ({user.age} years old)\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useState, Fragment } from \"react\";\nimport Wrapper from \"./Components/Helpers/Wrapper\";\nimport AddUser from \"./Components/Users/AddUser\";\nimport UsersList from \"./Components/Users/UsersList\";\n\nfunction App() {\n  const [usersList, setUsersList] = useState([]);\n\n  const addUserHandler = (uName, uAge) => {\n    setUsersList((prevUsersList) => {\n      return [\n        ...prevUsersList,\n        { name: uName, age: uAge, id: Math.random().toString() },\n      ];\n    });\n  };\n  return (\n    // check on Fragments, instead of creating a Wrapper, we can return <></> empty which will not create div in DOM\n    // or <React.Fragment></React.Fragment>, or additionally import Fragment and then just use it as below\n    <Fragment>\n      <AddUser onAddUser={addUserHandler} />\n      <UsersList users={usersList} />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}